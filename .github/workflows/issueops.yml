name: Execute Migration Script

on:
  issue_comment:
    types: [created]

jobs:
  issueops:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas openpyxl requests

      - name: Check for /run-reclaim command
        id: check-command
        run: |
          if echo "${{ github.event.comment.body }}" | grep -q "/run-reclaim"; then
            echo "COMMAND_FOUND=true" >> $GITHUB_ENV
          else
            echo "COMMAND_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Extract parameters from comment
        if: env.COMMAND_FOUND == 'true'
        id: extract-params
        run: |
          EMU_USERS_FILE=$(echo '${{ github.event.comment.body }}' | grep -oP '(?<=--emu-users-file=")[^"]+')
          USER_MAPPINGS_FILE=$(echo '${{ github.event.comment.body }}' | grep -oP '(?<=--user-mappings-file=")[^"]+')
          ORG_NAME=$(echo '${{ github.event.comment.body }}' | grep -oP '(?<=--org-name=")[^"]+')

          echo "EMU_USERS_FILE=$EMU_USERS_FILE" >> $GITHUB_ENV
          echo "USER_MAPPINGS_FILE=$USER_MAPPINGS_FILE" >> $GITHUB_ENV
          echo "ORG_NAME=$ORG_NAME" >> $GITHUB_ENV

      - name: Run migration script
        if: env.COMMAND_FOUND == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EMU_USERS_FILE: ${{ env.EMU_USERS_FILE }}
          USER_MAPPINGS_FILE: ${{ env.USER_MAPPINGS_FILE }}
          ORG_NAME: ${{ env.ORG_NAME }}
        run: |
          echo "Running migration script with the following variables:"
          echo "EMU_USERS_FILE: $EMU_USERS_FILE"
          echo "USER_MAPPINGS_FILE: $USER_MAPPINGS_FILE"
          echo "ORG_NAME: $ORG_NAME"
          python mapping.py

      - name: Commit and push changes
        if: env.COMMAND_FOUND == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${{ env.USER_MAPPINGS_FILE }}
          git commit -m "Update target users in CSV file"
          git push